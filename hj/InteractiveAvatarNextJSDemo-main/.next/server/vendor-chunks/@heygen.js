"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@heygen";
exports.ids = ["vendor-chunks/@heygen"];
exports.modules = {

/***/ "(ssr)/./node_modules/@heygen/streaming-avatar/lib/index.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/@heygen/streaming-avatar/lib/index.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AvatarQuality: () => (/* binding */ AvatarQuality),\n/* harmony export */   StreamingEvents: () => (/* binding */ StreamingEvents),\n/* harmony export */   TaskMode: () => (/* binding */ TaskMode),\n/* harmony export */   TaskType: () => (/* binding */ TaskType),\n/* harmony export */   VoiceEmotion: () => (/* binding */ VoiceEmotion),\n/* harmony export */   \"default\": () => (/* binding */ StreamingAvatar)\n/* harmony export */ });\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n/* harmony import */ var protobufjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! protobufjs */ \"(ssr)/./node_modules/protobufjs/index.js\");\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction sleep(ms) {\n    return new Promise(function (resolve) { return setTimeout(resolve, ms); });\n}\nfunction convertFloat32ToS16PCM(float32Array) {\n    var int16Array = new Int16Array(float32Array.length);\n    for (var i = 0; i < float32Array.length; i++) {\n        var clampedValue = Math.max(-1, Math.min(1, float32Array[i]));\n        int16Array[i] = clampedValue < 0 ? clampedValue * 32768 : clampedValue * 32767;\n    }\n    return int16Array;\n}\n\nvar options = {\n\tsyntax: \"proto3\"\n};\nvar nested = {\n\tpipecat: {\n\t\tnested: {\n\t\t\tTextFrame: {\n\t\t\t\tfields: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\ttype: \"uint64\",\n\t\t\t\t\t\tid: 1\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 2\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 3\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tAudioRawFrame: {\n\t\t\t\tfields: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\ttype: \"uint64\",\n\t\t\t\t\t\tid: 1\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 2\n\t\t\t\t\t},\n\t\t\t\t\taudio: {\n\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\tid: 3\n\t\t\t\t\t},\n\t\t\t\t\tsampleRate: {\n\t\t\t\t\t\ttype: \"uint32\",\n\t\t\t\t\t\tid: 4\n\t\t\t\t\t},\n\t\t\t\t\tnumChannels: {\n\t\t\t\t\t\ttype: \"uint32\",\n\t\t\t\t\t\tid: 5\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tTranscriptionFrame: {\n\t\t\t\tfields: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\ttype: \"uint64\",\n\t\t\t\t\t\tid: 1\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 2\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 3\n\t\t\t\t\t},\n\t\t\t\t\tuserId: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 4\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 5\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tFrame: {\n\t\t\t\toneofs: {\n\t\t\t\t\tframe: {\n\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\"text\",\n\t\t\t\t\t\t\t\"audio\",\n\t\t\t\t\t\t\t\"transcription\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfields: {\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: \"TextFrame\",\n\t\t\t\t\t\tid: 1\n\t\t\t\t\t},\n\t\t\t\t\taudio: {\n\t\t\t\t\t\ttype: \"AudioRawFrame\",\n\t\t\t\t\t\tid: 2\n\t\t\t\t\t},\n\t\t\t\t\ttranscription: {\n\t\t\t\t\t\ttype: \"TranscriptionFrame\",\n\t\t\t\t\t\tid: 3\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nvar jsonDescriptor = {\n\toptions: options,\n\tnested: nested\n};\n\nvar AvatarQuality;\n(function (AvatarQuality) {\n    AvatarQuality[\"Low\"] = \"low\";\n    AvatarQuality[\"Medium\"] = \"medium\";\n    AvatarQuality[\"High\"] = \"high\";\n})(AvatarQuality || (AvatarQuality = {}));\nvar VoiceEmotion;\n(function (VoiceEmotion) {\n    VoiceEmotion[\"EXCITED\"] = \"excited\";\n    VoiceEmotion[\"SERIOUS\"] = \"serious\";\n    VoiceEmotion[\"FRIENDLY\"] = \"friendly\";\n    VoiceEmotion[\"SOOTHING\"] = \"soothing\";\n    VoiceEmotion[\"BROADCASTER\"] = \"broadcaster\";\n})(VoiceEmotion || (VoiceEmotion = {}));\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TALK\"] = \"talk\";\n    TaskType[\"REPEAT\"] = \"repeat\";\n})(TaskType || (TaskType = {}));\nvar TaskMode;\n(function (TaskMode) {\n    TaskMode[\"SYNC\"] = \"sync\";\n    TaskMode[\"ASYNC\"] = \"async\";\n})(TaskMode || (TaskMode = {}));\n// event types --------------------------------\nvar StreamingEvents;\n(function (StreamingEvents) {\n    StreamingEvents[\"AVATAR_START_TALKING\"] = \"avatar_start_talking\";\n    StreamingEvents[\"AVATAR_STOP_TALKING\"] = \"avatar_stop_talking\";\n    StreamingEvents[\"AVATAR_TALKING_MESSAGE\"] = \"avatar_talking_message\";\n    StreamingEvents[\"AVATAR_END_MESSAGE\"] = \"avatar_end_message\";\n    StreamingEvents[\"USER_TALKING_MESSAGE\"] = \"user_talking_message\";\n    StreamingEvents[\"USER_END_MESSAGE\"] = \"user_end_message\";\n    StreamingEvents[\"USER_START\"] = \"user_start\";\n    StreamingEvents[\"USER_STOP\"] = \"user_stop\";\n    StreamingEvents[\"USER_SILENCE\"] = \"user_silence\";\n    StreamingEvents[\"STREAM_READY\"] = \"stream_ready\";\n    StreamingEvents[\"STREAM_DISCONNECTED\"] = \"stream_disconnected\";\n})(StreamingEvents || (StreamingEvents = {}));\nvar APIError = /** @class */ (function (_super) {\n    __extends(APIError, _super);\n    function APIError(message, status, responseText) {\n        var _this = _super.call(this, message) || this;\n        _this.name = 'APIError';\n        _this.status = status;\n        _this.responseText = responseText;\n        return _this;\n    }\n    return APIError;\n}(Error));\nvar StreamingAvatar = /** @class */ (function () {\n    function StreamingAvatar(_a) {\n        var token = _a.token, _b = _a.basePath, basePath = _b === void 0 ? \"https://api.heygen.com\" : _b;\n        this.room = null;\n        this.mediaStream = null;\n        this.eventTarget = new EventTarget();\n        this.audioContext = null;\n        this.webSocket = null;\n        this.scriptProcessor = null;\n        this.mediaStreamAudioSource = null;\n        this.mediaDevicesStream = null;\n        this.sessionId = null;\n        this.token = token;\n        this.basePath = basePath;\n    }\n    StreamingAvatar.prototype.createStartAvatar = function (requestData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sessionInfo, room, mediaStream;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.newSession(requestData)];\n                    case 1:\n                        sessionInfo = _a.sent();\n                        this.sessionId = sessionInfo.session_id;\n                        this.language = requestData.language;\n                        room = new livekit_client__WEBPACK_IMPORTED_MODULE_0__.Room({\n                            adaptiveStream: true,\n                            dynacast: true,\n                            videoCaptureDefaults: {\n                                resolution: livekit_client__WEBPACK_IMPORTED_MODULE_0__.VideoPresets.h720.resolution,\n                            },\n                        });\n                        this.room = room;\n                        this.mediaStream = null;\n                        room.on(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.DataReceived, function (roomMessage) {\n                            var eventMsg = null;\n                            try {\n                                var messageString = new TextDecoder().decode(roomMessage);\n                                eventMsg = JSON.parse(messageString);\n                            }\n                            catch (e) {\n                                console.error(e);\n                            }\n                            if (!eventMsg) {\n                                return;\n                            }\n                            _this.emit(eventMsg.type, eventMsg);\n                        });\n                        mediaStream = new MediaStream();\n                        room.on(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscribed, function (track) {\n                            if (track.kind === \"video\" || track.kind === \"audio\") {\n                                mediaStream.addTrack(track.mediaStreamTrack);\n                                var hasVideoTrack = mediaStream.getVideoTracks().length > 0;\n                                var hasAudioTrack = mediaStream.getAudioTracks().length > 0;\n                                if (hasVideoTrack &&\n                                    hasAudioTrack &&\n                                    !_this.mediaStream) {\n                                    _this.mediaStream = mediaStream;\n                                    _this.emit(StreamingEvents.STREAM_READY, _this.mediaStream);\n                                }\n                            }\n                        });\n                        room.on(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnsubscribed, function (track) {\n                            var mediaTrack = track.mediaStreamTrack;\n                            if (mediaTrack) {\n                                mediaStream.removeTrack(mediaTrack);\n                            }\n                        });\n                        room.on(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.Disconnected, function (reason) {\n                            _this.emit(StreamingEvents.STREAM_DISCONNECTED, reason);\n                        });\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, room.prepareConnection(sessionInfo.url, sessionInfo.access_token)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 5: return [4 /*yield*/, this.startSession()];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, room.connect(sessionInfo.url, sessionInfo.access_token)];\n                    case 7:\n                        _a.sent();\n                        return [2 /*return*/, sessionInfo];\n                }\n            });\n        });\n    };\n    StreamingAvatar.prototype.startVoiceChat = function () {\n        return __awaiter(this, arguments, void 0, function (requestData) {\n            var devicesStream, e_1;\n            var _this = this;\n            var _a, _b, _c;\n            if (requestData === void 0) { requestData = {}; }\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        requestData.useSilencePrompt = requestData.useSilencePrompt || false;\n                        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n                            return [2 /*return*/];\n                        }\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, , 7]);\n                        return [4 /*yield*/, this.loadAudioRawFrame()];\n                    case 2:\n                        _d.sent();\n                        return [4 /*yield*/, this.connectWebSocket({ useSilencePrompt: requestData.useSilencePrompt })];\n                    case 3:\n                        _d.sent();\n                        this.audioContext = new window.AudioContext({\n                            latencyHint: 'interactive',\n                            sampleRate: 16000,\n                        });\n                        return [4 /*yield*/, navigator.mediaDevices.getUserMedia({\n                                audio: {\n                                    sampleRate: 16000,\n                                    channelCount: 1,\n                                    autoGainControl: true,\n                                    echoCancellation: true,\n                                    noiseSuppression: true,\n                                },\n                            })];\n                    case 4:\n                        devicesStream = _d.sent();\n                        this.mediaDevicesStream = devicesStream;\n                        this.mediaStreamAudioSource = (_a = this.audioContext) === null || _a === void 0 ? void 0 : _a.createMediaStreamSource(devicesStream);\n                        this.scriptProcessor = (_b = this.audioContext) === null || _b === void 0 ? void 0 : _b.createScriptProcessor(512, 1, 1);\n                        this.mediaStreamAudioSource.connect(this.scriptProcessor);\n                        this.scriptProcessor.connect((_c = this.audioContext) === null || _c === void 0 ? void 0 : _c.destination);\n                        this.scriptProcessor.onaudioprocess = function (event) {\n                            var _a, _b, _c;\n                            if (!_this.webSocket) {\n                                return;\n                            }\n                            var audioData = event.inputBuffer.getChannelData(0);\n                            var pcmS16Array = convertFloat32ToS16PCM(audioData);\n                            var pcmByteArray = new Uint8Array(pcmS16Array.buffer);\n                            var frame = (_a = _this.audioRawFrame) === null || _a === void 0 ? void 0 : _a.create({\n                                audio: {\n                                    audio: Array.from(pcmByteArray),\n                                    sampleRate: 16000,\n                                    numChannels: 1,\n                                },\n                            });\n                            var encodedFrame = new Uint8Array((_b = _this.audioRawFrame) === null || _b === void 0 ? void 0 : _b.encode(frame).finish());\n                            (_c = _this.webSocket) === null || _c === void 0 ? void 0 : _c.send(encodedFrame);\n                        };\n                        // though room has been connected, but the stream may not be ready.\n                        return [4 /*yield*/, sleep(2000)];\n                    case 5:\n                        // though room has been connected, but the stream may not be ready.\n                        _d.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        e_1 = _d.sent();\n                        console.error(e_1);\n                        throw e_1;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StreamingAvatar.prototype.closeVoiceChat = function () {\n        var _a, _b;\n        try {\n            if (this.audioContext) {\n                this.audioContext = null;\n            }\n            if (this.scriptProcessor) {\n                this.scriptProcessor.disconnect();\n                this.scriptProcessor = null;\n            }\n            if (this.mediaStreamAudioSource) {\n                this.mediaStreamAudioSource.disconnect();\n                this.mediaStreamAudioSource = null;\n            }\n            if (this.mediaDevicesStream) {\n                (_b = (_a = this.mediaDevicesStream) === null || _a === void 0 ? void 0 : _a.getTracks()) === null || _b === void 0 ? void 0 : _b.forEach(function (track) { return track.stop(); });\n                this.mediaDevicesStream = null;\n            }\n            if (this.webSocket) {\n                this.webSocket.close();\n            }\n        }\n        catch (e) { }\n    };\n    StreamingAvatar.prototype.newSession = function (requestData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, _c, _d;\n            return __generator(this, function (_e) {\n                return [2 /*return*/, this.request(\"/v1/streaming.new\", {\n                        avatar_name: requestData.avatarName,\n                        quality: requestData.quality,\n                        knowledge_base_id: requestData.knowledgeId,\n                        knowledge_base: requestData.knowledgeBase,\n                        voice: {\n                            voice_id: (_a = requestData.voice) === null || _a === void 0 ? void 0 : _a.voiceId,\n                            rate: (_b = requestData.voice) === null || _b === void 0 ? void 0 : _b.rate,\n                            emotion: (_c = requestData.voice) === null || _c === void 0 ? void 0 : _c.emotion,\n                            elevenlabs_settings: (_d = requestData === null || requestData === void 0 ? void 0 : requestData.voice) === null || _d === void 0 ? void 0 : _d.elevenlabsSettings,\n                        },\n                        language: requestData.language,\n                        version: \"v2\",\n                        video_encoding: \"H264\",\n                        source: 'sdk',\n                        disable_idle_timeout: requestData.disableIdleTimeout,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.startSession = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.request(\"/v1/streaming.start\", {\n                        session_id: this.sessionId,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.speak = function (requestData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var frame, encodedFrame;\n            var _a, _b, _c;\n            return __generator(this, function (_d) {\n                requestData.taskType = requestData.taskType || requestData.task_type || TaskType.TALK;\n                requestData.taskMode = requestData.taskMode || TaskMode.ASYNC;\n                // try to use websocket first\n                // only support talk task\n                if (this.webSocket && this.audioRawFrame && requestData.task_type === TaskType.TALK && requestData.taskMode !== TaskMode.SYNC) {\n                    frame = (_a = this.audioRawFrame) === null || _a === void 0 ? void 0 : _a.create({\n                        text: {\n                            text: requestData.text,\n                        },\n                    });\n                    encodedFrame = new Uint8Array((_b = this.audioRawFrame) === null || _b === void 0 ? void 0 : _b.encode(frame).finish());\n                    (_c = this.webSocket) === null || _c === void 0 ? void 0 : _c.send(encodedFrame);\n                    return [2 /*return*/];\n                }\n                return [2 /*return*/, this.request(\"/v1/streaming.task\", {\n                        text: requestData.text,\n                        session_id: this.sessionId,\n                        task_mode: requestData.taskMode,\n                        task_type: requestData.taskType,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.startListening = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.request(\"/v1/streaming.start_listening\", {\n                        session_id: this.sessionId,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.stopListening = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.request(\"/v1/streaming.stop_listening\", {\n                        session_id: this.sessionId,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.interrupt = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.request(\"/v1/streaming.interrupt\", {\n                        session_id: this.sessionId,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.stopAvatar = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                // clear some resources\n                this.closeVoiceChat();\n                return [2 /*return*/, this.request(\"/v1/streaming.stop\", {\n                        session_id: this.sessionId,\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.on = function (eventType, listener) {\n        this.eventTarget.addEventListener(eventType, listener);\n        return this;\n    };\n    StreamingAvatar.prototype.off = function (eventType, listener) {\n        this.eventTarget.removeEventListener(eventType, listener);\n        return this;\n    };\n    StreamingAvatar.prototype.request = function (path, params, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, errorText, jsonData, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 5, , 6]);\n                        return [4 /*yield*/, fetch(this.getRequestUrl(path), {\n                                method: \"POST\",\n                                headers: {\n                                    Authorization: \"Bearer \".concat(this.token),\n                                    \"Content-Type\": \"application/json\",\n                                },\n                                body: JSON.stringify(params),\n                            })];\n                    case 1:\n                        response = _a.sent();\n                        if (!!response.ok) return [3 /*break*/, 3];\n                        return [4 /*yield*/, response.text()];\n                    case 2:\n                        errorText = _a.sent();\n                        throw new APIError(\"API request failed with status \".concat(response.status), response.status, errorText);\n                    case 3: return [4 /*yield*/, response.json()];\n                    case 4:\n                        jsonData = _a.sent();\n                        return [2 /*return*/, jsonData.data];\n                    case 5:\n                        error_2 = _a.sent();\n                        throw error_2;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StreamingAvatar.prototype.emit = function (eventType, detail) {\n        var event = new CustomEvent(eventType, { detail: detail });\n        this.eventTarget.dispatchEvent(event);\n    };\n    StreamingAvatar.prototype.getRequestUrl = function (endpoint) {\n        return \"\".concat(this.basePath).concat(endpoint);\n    };\n    StreamingAvatar.prototype.connectWebSocket = function (requestData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var websocketUrl;\n            var _this = this;\n            return __generator(this, function (_a) {\n                websocketUrl = \"wss://\".concat(new URL(this.basePath).hostname, \"/v1/ws/streaming.chat?session_id=\").concat(this.sessionId, \"&session_token=\").concat(this.token, \"&silence_response=\").concat(requestData.useSilencePrompt);\n                if (this.language) {\n                    websocketUrl += \"&stt_language=\".concat(this.language);\n                }\n                this.webSocket = new WebSocket(websocketUrl);\n                this.webSocket.addEventListener('message', function (event) {\n                    var eventData = null;\n                    try {\n                        eventData = JSON.parse(event.data);\n                    }\n                    catch (e) {\n                        console.error(e);\n                        return;\n                    }\n                    _this.emit(eventData.event_type, eventData);\n                });\n                this.webSocket.addEventListener('close', function (event) {\n                    _this.webSocket = null;\n                });\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var _a, _b;\n                        (_a = _this.webSocket) === null || _a === void 0 ? void 0 : _a.addEventListener('error', function (event) {\n                            _this.webSocket = null;\n                            reject(event);\n                        });\n                        (_b = _this.webSocket) === null || _b === void 0 ? void 0 : _b.addEventListener('open', function () {\n                            resolve(true);\n                        });\n                    })];\n            });\n        });\n    };\n    StreamingAvatar.prototype.loadAudioRawFrame = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var root;\n            return __generator(this, function (_a) {\n                if (!this.audioRawFrame) {\n                    root = protobufjs__WEBPACK_IMPORTED_MODULE_1__.Root.fromJSON(jsonDescriptor);\n                    this.audioRawFrame = root === null || root === void 0 ? void 0 : root.lookupType('pipecat.Frame');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return StreamingAvatar;\n}());\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@heygen/streaming-avatar/lib/index.esm.js\n");

/***/ })

};
;